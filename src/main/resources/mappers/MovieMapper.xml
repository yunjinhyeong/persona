<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.mapper.MovieMapper">

	<insert id="addMovie">
		Insert INTO movie (theater, m_rank, m_name, m_score, m_rate, m_genre, m_runtime, m_director, m_actor, m_start, m_end, m_like, reg_date) 
		VALUES (#{theater}, #{mRank}, #{mName}, #{mScore}, #{mRate}, #{mGenre}, #{mRuntime}, #{mDirector}, #{mActor}, #{mStart}, #{mEnd}, #{mLike}, #{regDate})
	</insert>
	
	<update id="updateReadcount">
		UPDATE movie 
		SET readcount = readcount + 1 
		WHERE num = #{num} 
	</update>
	
	
	<select id="getCountAll" resultType="int">
		SELECT COUNT(*) FROM movie
	</select>
	
	<select id="getNotices" resultType="noticeVo">
		SELECT * 
		FROM movie 
		ORDER BY re_ref DESC, re_seq ASC 
		LIMIT #{startRow}, #{pageSize} 
	</select>
	
	<update id="updateBoard">
		UPDATE movie 
		SET subject = #{subject}, content = #{content} 
		WHERE num = #{num} 
	</update>
	
	<update id="updateReSeq">
		<![CDATA[
		UPDATE notice 
		SET re_seq = re_seq + 1 
		WHERE re_ref = #{reRef} 
		AND re_seq > #{reSeq} 
		]]>
	</update>
	
	
	<select id="getCountBySearch" resultType="int">
		SELECT COUNT(*) 
		FROM movie 
		<if test="category == 'm_name'">
			WHERE m_name LIKE CONCAT('%', #{search}, '%') 
		</if>
		<if test="category == 'm_genre'">
			WHERE m_genre LIKE CONCAT('%', #{search}, '%') 
		</if>
		<if test="category == 'm_rank'">
			WHERE m_rank LIKE CONCAT('%', #{search}, '%') 
		</if>
	</select>
	
	
	<select id="getMoviesBySearch" resultType="movieVo">
		SELECT * 
		FROM movie 
		<if test="category == 'm_name'">
			WHERE m_name LIKE CONCAT('%', #{search}, '%') 
		</if>
		<if test="category == 'm_genre'">
			WHERE m_genre LIKE CONCAT('%', #{search}, '%') 
		</if>
		<if test="category == 'm_rank'">
			WHERE m_rank LIKE CONCAT('%', #{search}, '%') 
		</if>
		ORDER BY m_num DESC 
		LIMIT #{startRow}, #{pageSize}
	</select>
	
	
	
	<select id="getMovieAndMImgTrailers" resultMap="movieAndmImgTrailers">
		SELECT n.m_num, n.theater, n.m_rank, n.m_name, n.m_score, n.m_rate, n.m_genre,
		       n.m_runtime, n.m_director, n.m_actor, n.m_start, n.m_end, n.m_like, n.reg_date,
		       a.num as anum, a.uuid, a.filename, a.uploadpath, a.image, a.no_num
		FROM movie n LEFT OUTER JOIN mimgtrailer a
		ON n.m_num = a.no_num
		where n.m_num = #{mNum}
	</select>
	<resultMap id="movieAndmImgTrailers" type="movieVo">
		<!-- property 속성은 setter 메소드 이름을 의미함! -->
		<id column="m_num" property="mNum"/>
		<result column="theater" property="theater"/>
		<result column="m_rank" property="mRank"/>
		<result column="m_name" property="mName"/>		
		<result column="m_score" property="mScore"/>
		<result column="m_rate" property="mRate"/>
		<result column="m_genre" property="mGenre"/>
		<result column="m_runtime" property="mRuntime"/>
		<result column="m_director" property="mDirector"/>
		<result column="m_actor" property="mActor"/>
		<result column="m_start" property="mStart"/>
		<result column="m_end" property="mEnd"/>
		<result column="m_like" property="mLike"/>
		<result column="reg_date" property="regDate"/>
		<collection property="mImgTrailerList" ofType="mImgTrailerVo" javaType="arraylist">
			<id column="anum" property="num"/>
			<result column="uuid" property="uuid"/>
			<result column="filename" property="filename"/>
			<result column="uploadpath" property="uploadpath"/>
			<result column="image" property="image"/>
			<result column="no_num" property="noNum"/>
		</collection>
	</resultMap>
	
	
	<select id="getNoticesByNums" resultType="noticeVo">
		SELECT * 
		FROM notice
		WHERE num IN 
		<foreach collection="numList" item="num" open="(" separator="," close=")">
			#{num}
		</foreach>
	</select>
	
	

</mapper>



